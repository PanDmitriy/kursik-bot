import { Context, InlineKeyboard } from "grammy";
import { getUserSubscriptions } from "../../entities/user/user.repo";
import { NavigationManager, NAVIGATION_LEVELS } from "../../shared/utils/navigation";

export async function handleListSubscriptions(ctx: Context) {
  const chatId = ctx.chat?.id;
  if (!chatId) return;

  // –î–æ–±–∞–≤–ª—è–µ–º —É—Ä–æ–≤–µ–Ω—å –≤ —Ö–ª–µ–±–Ω—ã–µ –∫—Ä–æ—à–∫–∏
  NavigationManager.addBreadcrumb(chatId, NAVIGATION_LEVELS.SUBSCRIPTIONS);

  const subs = getUserSubscriptions(chatId);
  const breadcrumbs = NavigationManager.formatBreadcrumbs(chatId);

  if (subs.length === 0) {
    const navKeyboard = NavigationManager.createNavigationKeyboard(chatId, [
      { text: "‚ûï –î–æ–±–∞–≤–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É", callback_data: "menu_subscribe" }
    ]);
    
    await ctx.reply(
      `${breadcrumbs}üîî <b>–ú–æ–∏ –ø–æ–¥–ø–∏—Å–∫–∏</b>

–£ —Ç–µ–±—è –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–¥–ø–∏—Å–æ–∫.

–ò—Å–ø–æ–ª—å–∑—É–π –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å –ø–µ—Ä–≤—É—é –ø–æ–¥–ø–∏—Å–∫—É:`,
      { 
        reply_markup: navKeyboard,
        parse_mode: "HTML"
      }
    );
    return;
  }

  const lines = subs.map(
    (s) => `‚Ä¢ <b>${s.currency}</b> ‚Äî ${s.hour.toString().padStart(2, "0")}:${(s.minute ?? 0).toString().padStart(2, "0")}`
  );
  
  const navKeyboard = NavigationManager.createNavigationKeyboard(chatId, [
    { text: "‚ûï –î–æ–±–∞–≤–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É", callback_data: "menu_subscribe" },
    { text: "‚ùå –£–¥–∞–ª–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É", callback_data: "menu_unsubscribe" }
  ]);

  await ctx.reply(
    `${breadcrumbs}üîî <b>–ú–æ–∏ –ø–æ–¥–ø–∏—Å–∫–∏</b>

${lines.join("\n")}

<i>–í—Å–µ–≥–æ –ø–æ–¥–ø–∏—Å–æ–∫: ${subs.length}</i>`,
    { 
      reply_markup: navKeyboard,
      parse_mode: "HTML"
    }
  );
}

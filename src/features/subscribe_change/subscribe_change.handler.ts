import { Context, InlineKeyboard } from "grammy";
import { AVAILABLE_CURRENCIES } from "../rates/rate.handler";
import { addChangeSubscription } from "../../entities/user/change.repo";
import { isPremium } from "../../shared/services/premium.service";

export async function handleSubscribeChange(ctx: Context) {
  const chatId = ctx.chat?.id;
  if (!chatId) return;

  if (!isPremium(chatId)) {
    await ctx.reply("üîí –ü–æ–¥–ø–∏—Å–∫–∞ –ø–æ –∏–∑–º–µ–Ω–µ–Ω–∏—é –∫—É—Ä—Å–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ –≤ –ø—Ä–µ–º–∏—É–º-–≤–µ—Ä—Å–∏–∏.");
    return;
  }

  const keyboard = new InlineKeyboard();
  for (const code of AVAILABLE_CURRENCIES) {
    keyboard.text(code, `subchg_${code}`);
  }

  await ctx.reply(
    "üîî –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –∫—É—Ä—Å–∞\n\n–í—ã–±–µ—Ä–∏ –≤–∞–ª—é—Ç—É:",
    { reply_markup: keyboard }
  );
}

export async function handleSubscribeChangeCurrency(
  ctx: Context,
  next: () => Promise<void>
) {
  const data = ctx.callbackQuery?.data;
  if (!data?.startsWith("subchg_")) return next();

  const currency = data.replace("subchg_", "");
  const chatId = ctx.chat?.id;
  if (!chatId) return next();

  if (!isPremium(chatId)) {
    await ctx.answerCallbackQuery();
    await ctx.reply("üîí –ü–æ–¥–ø–∏—Å–∫–∞ –ø–æ –∏–∑–º–µ–Ω–µ–Ω–∏—é –∫—É—Ä—Å–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ –≤ –ø—Ä–µ–º–∏—É–º-–≤–µ—Ä—Å–∏–∏.");
    return;
  }

  await addChangeSubscription(chatId, currency);
  await ctx.answerCallbackQuery({ text: `‚úÖ –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ ${currency} –æ—Ñ–æ—Ä–º–ª–µ–Ω–∞` });
  await ctx.reply(
    `–¢–µ–ø–µ—Ä—å —Ç—ã –ø–æ–ª—É—á–∏—à—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ, –∫–∞–∫ —Ç–æ–ª—å–∫–æ –∫—É—Ä—Å ${currency} –∏–∑–º–µ–Ω–∏—Ç—Å—è.`,
  );
}


